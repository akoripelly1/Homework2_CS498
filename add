const express = require('express');
const mariadb = require('mariadb');

const app = express();
const port = 8080; // Change to 80 if needed

const pool = mariadb.createPool({
    host: '127.0.0.1',
    user: 'akori3',
    password: 'Ashi27824!',
    database: 'bankdb',
    connectionLimit: 5
});

app.use(express.json());

// Greeting endpoint
app.get('/greeting', (req, res) => {
    res.send('<h1>Hello World!</h1>');
});

// Register a user
app.post('/register', async (req, res) => {
    const { username } = req.body;
    let conn;
    try {
        conn = await pool.getConnection();
        await conn.query('INSERT INTO Users(username) VALUES (?)', [username]);
        res.json({ success: true, message: 'User registered' });
    } catch (err) {
        res.status(500).json({ success: false, error: err.message });
    } finally {
        if (conn) conn.release();
    }
});

// List users
app.get('/list', async (req, res) => {
    let conn;
    try {
        conn = await pool.getConnection();
        const rows = await conn.query('SELECT username FROM Users');
        res.json({ users: rows.map(row => row.username) });
    } catch (err) {
        res.status(500).json({ error: err.message });
    } finally {
        if (conn) conn.release();
    }
});

// Clear users
app.post('/clear', async (req, res) => {
    let conn;
    try {
        conn = await pool.getConnection();
        await conn.query('DELETE FROM Users');
        res.json({ success: true, message: 'All users removed' });
    } catch (err) {
        res.status(500).json({ error: err.message });
    } finally {
        if (conn) conn.release();
    }
});

app.listen(port, () => {
    console.log(`Server running on http://<YOUR_EXTERNAL_IP>:${port}`);
});
